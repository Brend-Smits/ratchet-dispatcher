name: Issue Ops Onboard User Request
on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: "Issue number"
        required: true
        type: string

jobs:
  parse-incoming-onboard-request:
    runs-on: ubuntu-latest
    outputs:
      ghname: ${{ steps.prepare.outputs.ghname }}
      email: ${{ steps.prepare.outputs.email }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
      - name: Fetch the issue
        id: read_issue_body
        run: echo "body=$(gh issue view ${{ inputs.issue_number }} --repo ${{
          github.repo }} --json body --jq '.body')" >> $GITHUB_OUTPUT

      - name: Parse issue form body
        id: parse
        uses: zentered/issue-forms-body-parser@93bd9fdcb3679be1889d2006e9c2cf496899402e # ratchet:zentered/issue-forms-body-parser@v2.2.0
        with:
          body: ${{ steps.read_issue_body.output.body }}

  check-user-exists:
    needs: parse-incoming-onboard-request
    runs-on: ubuntu-latest
    steps:
      - name: Call GitHub API to check if user exists
        id: call_github_api
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # ratchet:actions/github-script@v7
        with:
          github-token: ${{ secrets.ONBOARDER_GITHUB_TOKEN }}
          script: |
            try {
              const response = await github.rest.orgs.getMembershipForUser({
                org: 'example-rg',
                username: '${{needs.parse-incoming-onboard-request.outputs.ghname}}'
              });
              return response.status;
            } catch (error) {
              return null;
            }

      - name: Find Comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # ratchet:peter-evans/find-comment@v3
        id: fc
        if: ${{ steps.condition.outputs.user_exists == 'false' }}
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-author: "github-actions[bot]"
          body-includes: I'm sorry, but I couldn't find the user

  execute-onboard-request:
    needs: [parse-incoming-onboard-request, check-user-exists]
    runs-on: ubuntu-latest
    container:
      image: project-docker-rnd.artifactory-ehv.ta.company.com/project-member-onboarder:latest
      credentials:
        username: ${{ secrets.DISTRIBUTED_SECRET_ARTIFACTORY_USER }}
        password: ${{ secrets.DISTRIBUTED_SECRET_ARTIFACTORY_PASS }}
      env:
        ARTIFACTORY_USER: ${{ secrets.DISTRIBUTED_SECRET_ARTIFACTORY_USER }}
        ARTIFACTORY_PASS: ${{ secrets.DISTRIBUTED_SECRET_ARTIFACTORY_PASS }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      - name: Get Github Token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: token
        with:
          app-id: 349757
          private-key: ${{ secrets.ONBOARDER_project_MANAGER_GITHUB_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Download Rivendell Release Artifact
        uses: dsaltares/fetch-gh-release-asset@aa2ab1243d6e0d5b405b973c89fa4d06a2d0fff7
        with:
          file: "rivendell"
          target: "rivendell"
          token: ${{steps.token.outputs.token}}

      - name: Create Pull Request
        id: create_pull_request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # ratchet:peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.ONBOARDER_GITHUB_TOKEN }}
          commit-message: "chore(onboard): Onboard user."
          title: "chore(onboard): Onboard user"
          branch: "automated-onboard-user"
